// <auto-generated />
using System;
using LoadoutBuilder.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoadoutBuilder.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250727081020_AddedSightModelAndValidations")]
    partial class AddedSightModelAndValidations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Camo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Camos");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Loadout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Loadouts");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Sight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Sight");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.SightCategory", b =>
                {
                    b.Property<int>("SightId")
                        .HasColumnType("int");

                    b.Property<int>("CotegoryId")
                        .HasColumnType("int");

                    b.HasKey("SightId", "CotegoryId");

                    b.HasIndex("CotegoryId");

                    b.ToTable("SightCategory");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CotegoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CotegoryId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.WeaponSlot", b =>
                {
                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.Property<int>("CamoId")
                        .HasColumnType("int");

                    b.Property<int>("SightId")
                        .HasColumnType("int");

                    b.Property<int?>("LoadoutId")
                        .HasColumnType("int");

                    b.HasKey("WeaponId", "CamoId", "SightId");

                    b.HasIndex("CamoId");

                    b.HasIndex("LoadoutId");

                    b.HasIndex("SightId");

                    b.ToTable("WeaponSlots");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.SightCategory", b =>
                {
                    b.HasOne("LoadoutBuilder.Data.Models.Category", "Category")
                        .WithMany("SightCategories")
                        .HasForeignKey("CotegoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoadoutBuilder.Data.Models.Sight", "Sight")
                        .WithMany("SightCategories")
                        .HasForeignKey("SightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Sight");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Weapon", b =>
                {
                    b.HasOne("LoadoutBuilder.Data.Models.Category", "Category")
                        .WithMany("Weapons")
                        .HasForeignKey("CotegoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.WeaponSlot", b =>
                {
                    b.HasOne("LoadoutBuilder.Data.Models.Camo", "Camo")
                        .WithMany("WeaponSlots")
                        .HasForeignKey("CamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoadoutBuilder.Data.Models.Loadout", null)
                        .WithMany("WeaponSlots")
                        .HasForeignKey("LoadoutId");

                    b.HasOne("LoadoutBuilder.Data.Models.Sight", "Sight")
                        .WithMany("WeaponSlots")
                        .HasForeignKey("SightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoadoutBuilder.Data.Models.Weapon", "Weapon")
                        .WithMany("WeaponSlots")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camo");

                    b.Navigation("Sight");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Camo", b =>
                {
                    b.Navigation("WeaponSlots");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Category", b =>
                {
                    b.Navigation("SightCategories");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Loadout", b =>
                {
                    b.Navigation("WeaponSlots");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Sight", b =>
                {
                    b.Navigation("SightCategories");

                    b.Navigation("WeaponSlots");
                });

            modelBuilder.Entity("LoadoutBuilder.Data.Models.Weapon", b =>
                {
                    b.Navigation("WeaponSlots");
                });
#pragma warning restore 612, 618
        }
    }
}
